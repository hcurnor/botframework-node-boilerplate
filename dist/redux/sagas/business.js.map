{"version":3,"sources":["../../../src/redux/sagas/business.js"],"names":["root","productInfoAction","watchProductInfoAction","shipppingInfoAction","watchShippingInfoAction","languageHelper","string","session","action","entities","payload","length","i","entity","property","normalize","replace","botConfig","helper","response","join","BUSINESS_INFO","shippingCost","currency","SHIPPING_INFO"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EyBA,I,CA3EzB,6CACA,0DACA,yDACA,sD,qMA2BUC,iB,kDAwBAC,sB,kDAIAC,mB,kDAYAC,uB,kDAKeJ,I,EAtEzB,SAASK,cAAT,CAAwBC,MAAxB,EAAgC,CAC9B,QAAQA,MAAR,GACE,KAAK,WAAL,CACA,KAAK,SAAL,CACA,KAAK,QAAL,CACA,KAAK,SAAL,CACE,OAAO,WAAP,CACF,KAAK,WAAL,CACA,KAAK,OAAL,CACA,KAAK,WAAL,CACE,OAAO,SAAP,CACF,KAAK,OAAL,CACA,KAAK,QAAL,CACA,KAAK,QAAL,CACA,KAAK,aAAL,CACE,OAAO,OAAP,CACF,KAAK,SAAL,CACA,KAAK,UAAL,CACE,OAAO,OAAP,CACF,QACE,OAAOA,MAAP,CAnBJ,CAqBD,C,CAED;AACA,SAAUL,iBAAV,CAA4BM,OAA5B,EAAqCC,MAArC,wLACE;AACQC,kBAFV,GAEuBD,OAAOE,OAF9B,CAEUD,QAFV,OAGMA,YAAYA,SAASE,MAAT,GAAkB,CAHpC,8BAIQC,CAJR,GAIY,CAJZ,cAKWH,SAASE,MAAT,GAAkBC,CAL7B,8BAMcC,MANd,GAMyBJ,SAASG,CAAT,CANzB,CAMcC,MANd,CAOYC,QAPZ,GAOuBT,eAAeQ,OAAOE,SAAP,CAAiB,KAAjB,EAAwBC,OAAxB,CAAgC,kBAAhC,EAAoD,EAApD,CAAf,CAPvB,OAQUC,oBAAUH,QAAV,KAAuBG,oBAAUH,QAAV,EAAoBH,MAApB,GAA6B,CAR9D,8BAScO,MATd,GASuBD,oBAAUH,QAAV,EAAoBH,MAApB,GAA6B,CAA7B,GAAiC,aAAjC,GAAiD,GATxE,CAUcQ,QAVd,GAUyBF,oBAAUH,QAAV,EAAoBM,IAApB,CAAyB,IAAzB,CAVzB,2BAWc,kBAAI,gCAAY,qBAAZ,EAAmC,CAACP,MAAD,EAASK,MAAT,EAAiBC,QAAjB,CAAnC,CAAJ,CAXd,oEAac,kBAAI,gCAAY,yBAAZ,EAAuC,CAACN,MAAD,CAAvC,CAAJ,CAbd,SAeMD,KAAK,CAAL,CAfN,2FAmBU,kBAAI,gCAAY,cAAZ,CAAJ,CAnBV,gE,CAuBA;AACA,SAAUV,sBAAV,CAAiCK,OAAjC,qKACQ,wBAAUc,0BAAV,EAAyBpB,iBAAzB,EAA4CM,OAA5C,CADR,iEAIA,SAAUJ,mBAAV,0JAGMc,oBAAUK,YAAV,IAA0BL,oBAAUM,QAH1C,8BAIUjB,MAJV,GAIsBW,oBAAUM,QAJhC,SAI4CN,oBAAUK,YAJtD,2BAKU,kBAAI,gCAAY,wBAAZ,EAAsC,CAAChB,MAAD,CAAtC,CAAJ,CALV,kEAOU,kBAAI,gCAAY,uBAAZ,CAAJ,CAPV,iE,CAWA;AACA,SAAUF,uBAAV,CAAkCG,OAAlC,sKACQ,wBAAUiB,0BAAV,EAAyBrB,mBAAzB,EAA8CI,OAA9C,CADR,iE,CAIA;AACe,SAAUP,IAAV,CAAeO,OAAf,mJACP,CACJ,mBAAKL,sBAAL,EAA6BK,OAA7B,CADI,EAEJ,mBAAKH,uBAAL,EAA8BG,OAA9B,CAFI,CADO","file":"business.js","sourcesContent":["import { put, takeEvery, fork } from 'redux-saga/effects';\nimport { BUSINESS_INFO, SHIPPING_INFO } from '../../constants/actionTypes';\nimport { sendMessage } from '../actions/dialogActions';\nimport botConfig from '../../constants/botConfig';\n\nfunction languageHelper(string) {\n  switch (string) {\n    case 'telephono':\n    case 'celular':\n    case 'numero':\n    case 'numeros':\n      return 'telephone';\n    case 'direccion':\n    case 'lugar':\n    case 'domicilio':\n      return 'address';\n    case 'email':\n    case 'correo':\n    case 'e-mail':\n    case 'electronico':\n      return 'email';\n    case 'horario':\n    case 'horarios':\n      return 'hours';\n    default:\n      return string;\n  }\n}\n\n// Actions\nfunction* productInfoAction(session, action) {\n  // LUIS entities\n  const { entities } = action.payload;\n  if (entities && entities.length > 0) {\n    let i = 0;\n    while (entities.length > i) {\n      const { entity } = entities[i];\n      const property = languageHelper(entity.normalize('NFD').replace(/[\\u0300-\\u036f]/g, ''));\n      if (botConfig[property] && botConfig[property].length > 0) {\n        const helper = botConfig[property].length > 1 ? 'mas de uno:' : ':';\n        const response = botConfig[property].join(', ');\n        yield put(sendMessage('business_info_found', [entity, helper, response]));\n      } else {\n        yield put(sendMessage('business_info_not_found', [entity]));\n      }\n      i += 1;\n    }\n  } else {\n    // Fail to detect product\n    yield put(sendMessage('info_missing'));\n  }\n}\n\n// Action watcher\nfunction* watchProductInfoAction(session) {\n  yield takeEvery(BUSINESS_INFO, productInfoAction, session);\n}\n\nfunction* shipppingInfoAction() {\n  // LUIS entities (pending until each product v2)\n  // const { entities } = action.payload;\n  if (botConfig.shippingCost && botConfig.currency) {\n    const string = `${botConfig.currency} ${botConfig.shippingCost}`;\n    yield put(sendMessage('business_info_shipping', [string]));\n  } else {\n    yield put(sendMessage('business_info_missing'));\n  }\n}\n\n// Action watcher\nfunction* watchShippingInfoAction(session) {\n  yield takeEvery(SHIPPING_INFO, shipppingInfoAction, session);\n}\n\n// Export sagas\nexport default function* root(session) {\n  yield [\n    fork(watchProductInfoAction, session),\n    fork(watchShippingInfoAction, session),\n  ];\n}\n"]}