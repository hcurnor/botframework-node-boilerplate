{"version":3,"sources":["../../../src/redux/sagas/dialog.js"],"names":["root","builder","actionTypes","propmtText","endConversation","sendEvent","sendMessage","watchSendMessage","watchPropmtText","watchEndConversation","watchSendEvent","session","action","Prompts","text","payload","name","value","send","type","attachments","args","message","Message","SEND_MESSAGE","PROMPT_TEXT","END_CONVERSATION","SEND_EVENT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDyBA,I,CAlDzB,wC,IAAYC,O,wCACZ,uCACA,6CACA,0D,IAAYC,W,shBAGFC,U,kDAIAC,e,kDAIAC,S,kDAKAC,W,kDAgBAC,gB,kDAGAC,e,kDAGAC,oB,kDAGAC,c,kDAMeV,I,GA7CzB;AACA,SAAUG,UAAV,CAAqBQ,OAArB,EAA8BC,MAA9B,qJACQX,QAAQY,OAAR,CAAgBC,IAAhB,CAAqBH,OAArB,EAA8BC,OAAOG,OAAP,CAAeD,IAA7C,CADR,+D,CAGA;AACA,SAAUV,eAAV,CAA0BO,OAA1B,8JACQA,QAAQP,eAAR,CAAwB,sBAAxB,CADR,iE,CAGA;AACA,SAAUC,SAAV,CAAoBM,OAApB,EAA6BC,MAA7B,iLAC0BA,OAAOG,OADjC,EACUC,IADV,mBACUA,IADV,EACgBC,KADhB,mBACgBA,KADhB,2BAEQN,QAAQO,IAAR,CAAa,EAAEC,MAAM,OAAR,EAAiBH,UAAjB,EAAuBC,YAAvB,EAAb,CAFR,iE,CAIA;AACA,SAAUX,WAAV,CAAsBK,OAAtB,EAA+BC,MAA/B,0MACsCA,OAAOG,OAD7C,EACUK,WADV,oBACUA,WADV,EACuBN,IADvB,oBACuBA,IADvB,EAC6BO,IAD7B,oBAC6BA,IAD7B,CAEQC,OAFR,GAEkB,IAAIrB,QAAQsB,OAAZ,CAAoBZ,OAApB,CAFlB,CAIE,IAAIG,QAAQO,IAAZ,EAAkB,CAChBC,QAAQR,IAAR,iBAAaA,IAAb,4BAAsBO,IAAtB,IACD,CAFD,MAEO,CACLC,QAAQR,IAAR,CAAaA,IAAb,EACD,CACD,IAAIM,WAAJ,EAAiB,CACfE,QAAQF,WAAR,CAAoBA,WAApB,EACD,CAXH,0BAYQT,QAAQO,IAAR,CAAaI,OAAb,CAZR,iE,CAcA;AAEA,SAAUf,gBAAV,CAA2BI,OAA3B,+JACQ,0BAAUT,YAAYsB,YAAtB,EAAoClB,WAApC,EAAiDK,OAAjD,CADR,iEAGA,SAAUH,eAAV,CAA0BG,OAA1B,8JACQ,0BAAUT,YAAYuB,WAAtB,EAAmCtB,UAAnC,EAA+CQ,OAA/C,CADR,iEAGA,SAAUF,oBAAV,CAA+BE,OAA/B,mKACQ,0BAAUT,YAAYwB,gBAAtB,EAAwCtB,eAAxC,EAAyDO,OAAzD,CADR,iEAGA,SAAUD,cAAV,CAAyBC,OAAzB,6JACQ,0BAAUT,YAAYyB,UAAtB,EAAkCtB,SAAlC,EAA6CM,OAA7C,CADR,iE,CAIA;AAEe,SAAUX,IAAV,CAAeW,OAAf,mJACP,CACJ,mBAAKH,eAAL,EAAsBG,OAAtB,CADI,EAEJ,mBAAKF,oBAAL,EAA2BE,OAA3B,CAFI,EAGJ,mBAAKD,cAAL,EAAqBC,OAArB,CAHI,EAIJ,mBAAKJ,gBAAL,EAAuBI,OAAvB,CAJI,CADO","file":"dialog.js","sourcesContent":["import * as builder from 'botbuilder';\nimport { takeEvery } from 'redux-saga';\nimport { fork } from 'redux-saga/effects';\nimport * as actionTypes from '../../constants/actionTypes';\n\n// PrompText\nfunction* propmtText(session, action) {\n  yield builder.Prompts.text(session, action.payload.text);\n}\n// End conversation\nfunction* endConversation(session) {\n  yield session.endConversation('bye_messages_generic');\n}\n// Send Event\nfunction* sendEvent(session, action) {\n  const { name, value } = action.payload;\n  yield session.send({ type: 'event', name, value });\n}\n// Send message\nfunction* sendMessage(session, action) {\n  const { attachments, text, args } = action.payload;\n  const message = new builder.Message(session);\n\n  if (text && args) {\n    message.text(text, ...args);\n  } else {\n    message.text(text);\n  }\n  if (attachments) {\n    message.attachments(attachments);\n  }\n  yield session.send(message);\n}\n// Action watchers\n\nfunction* watchSendMessage(session) {\n  yield takeEvery(actionTypes.SEND_MESSAGE, sendMessage, session);\n}\nfunction* watchPropmtText(session) {\n  yield takeEvery(actionTypes.PROMPT_TEXT, propmtText, session);\n}\nfunction* watchEndConversation(session) {\n  yield takeEvery(actionTypes.END_CONVERSATION, endConversation, session);\n}\nfunction* watchSendEvent(session) {\n  yield takeEvery(actionTypes.SEND_EVENT, sendEvent, session);\n}\n\n// Export sagas\n\nexport default function* root(session) {\n  yield [\n    fork(watchPropmtText, session),\n    fork(watchEndConversation, session),\n    fork(watchSendEvent, session),\n    fork(watchSendMessage, session),\n  ];\n}\n"]}